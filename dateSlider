/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var lt8sr = ee.ImageCollection("LANDSAT/LC08/C01/T1_SR"),
    l5 = ee.ImageCollection("LANDSAT/LT05/C01/T1_SR"),
    NAIP = ee.ImageCollection("USDA/NAIP/DOQQ"),
    lt7t1 = ee.ImageCollection("LANDSAT/LE07/C01/T1_SR");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var bands=['B3','B2','B1','pixel_qa']
var lt5sr = l5
    .filterDate("1984-01-01","2013-01-01")
    .filterMetadata("CLOUD_COVER","less_than",10)
    .select(bands)
var series5 = lt5sr.map(function(image) {
  var cfmask= image.select('pixel_qa');
    return image.updateMask(cfmask.eq(66))
    .rename('Red','Green','Blue','pixel_qa');;
});

//================================================
// Landsat 7 processing
//================================================
{
var bands=['B3','B2','B1','pixel_qa']
var lt7 = lt7t1
    .filterDate("2011-01-01","2013-12-31")
    .filterMetadata("CLOUD_COVER","less_than",10)
    .select(bands)
var series7 = lt7.map(function(image) {
  var cfmask= image.select('pixel_qa');
    return image.updateMask(cfmask.eq(66))
    .rename('Red','Green','Blue','pixel_qa');
});
}
//================================================
// Landsat 8 processing
//================================================
{
var bands=['B4','B3','B2','pixel_qa']
var lt8sr = lt8sr
    .select(bands)
var series = lt8sr.map(function(image) {
  var pqa= image.select('pixel_qa');
  var ret=image.updateMask(pqa.eq(322))
  .rename('Red','Green','Blue','pixel_qa');
  return ret
    return image.updateMask(pqa.eq(322));
});

var collection=ee.ImageCollection(
  series5
  .merge(series7)
  .merge(series))
print(collection,"image collection")

}



// Use the start of the collection and now to bound the slider.
var start = ee.Image(collection.first()).date().get('year').format();
var now = Date.now();
var end = ee.Date("2019-12-31").format();

// Run this function on a change of the dateSlider.
var showMosaic = function(range) {
  print(range.start(),range.end())
  var start_leafon=range.start().advance(3, 'month')
  var end_leafon=range.start().advance(8,"month")
  print(start_leafon,end_leafon)
  // var mosaic = ee.Algorithms.Landsat.simpleComposite({
  //   collection: collection.filterDate(start_leafon, end_leafon)
  // });
  var image=collection
            .filterDate(start_leafon,end_leafon)
            .mean();
  // Asynchronously compute the name of the composite.  Display it.
  range.start().get('year').evaluate(function(name) {
    var visParams = {bands: ['Red', 'Green', 'Blue'], min: 100,max:1500};
    var layer = ui.Map.Layer(image, visParams, name + ' composite');
    Map.layers().set(0, layer);
  });
};

// Asynchronously compute the date range and show the slider.
var dateRange = ee.DateRange(start, end).evaluate(function(range) {
  var dateSlider = ui.DateSlider({
    start: range['dates'][0],
    end: range['dates'][1],
    value: null,
    period: 365,
    onChange: showMosaic
  });
  Map.add(dateSlider.setValue(now));
});